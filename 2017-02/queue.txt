		FIFO



        queue.offer("b");
        queue.offer("c");
        queue.offer("d");
        queue.offer("e");


        for(String q : queue){
            System.out.println(q);
        }



        System.out.println("poll="+queue.poll()); //返回第一个元素，并在队列中删除



        System.out.println("element="+queue.element()); //返回第一个元素 




        System.out.println("peek="+queue.peek()); //返回第一个元素 










        // 实现1
		var queue = []
		// 进队
		queue.push(1)
		queue.push(2)
		queue.push(3)
		// 出队
		queue.shift() // 1
		queue.shift() // 2
		queue.shift() // 3

		// 实现2
		var queue2 = []
		// 进队
		queue2.unshift(1)
		queue2.unshift(2)
		queue2.unshift(3)
		// 出队
		queue2.pop() // 1
		queue2.pop() // 2
		queue2.pop() // 3


		XHR是什么？
		就是 Xml HttpRequest
		Xml Http请求



		var xhr;
		 if(window.XMLHttpRequest){
		    xhr = new XMLHttpRequest();
		 }else{
		    xhr = new ActiveXObject('Microsoft.XMLHTTP');
		 }

		 xhr.open("get","example.php", false);
		 xhr.send(null);


		 在收到响应后，响应的数据会自动填充XHR对象的属性，主要有以下4个属性
		 responseText: 作为响应主体被返回的***文本***
		  responseXML: 如果响应的内容类型是'text/xml'或'application/xml'，这个属性中将保存着响应数据的***XML DOM文档 ***
		  status: 响应的HTTP***状态***
		  statusText: HTTP状态的***说明***发了状态，附加说明，返回的东西加了个说明


		 无论内容类型是什么，响应主体的内容都会保存到responseText属性中，而对于非XML数据而言，responseXML属性的值将为null,responseXML只存着一个XML



		状态码 
		1.消息
		2.成功
		3.重定向
		4.请求错误
		5.服务器错误
		if((xhr.status >=200 && xhr.status < 300) || xhr.status == 304){
		    alert(xhr.responseText);//成功
		 }else{
		    alert('request was unsuccessful:' + xhr.status);//不成功,打印状态码
		 }


		异步
		　 如果需要接收的是异步响应，这就需要检测XHR对象的readyState属性，该属性表示请求/响应过程的当前活动阶段。这个属性可取的值如下：

		 0(UNSENT):未初始化。尚未调用open()方法
		 1(OPENED):启动。已经调用open()方法，但尚未调用send()方法
		 2(HEADERS_RECEIVED):发送。己经调用send()方法，且接收到头信息
		 3(LOADING):接收。已经接收到部分响应主体信息
		 4(DONE):完成。已经接收到全部响应数据，而且已经可以在客户端使用了

		　　只要readyState属性值由一个值变成另一个值，都会触发一次readystatechange事件。可以利用这个事件来检测每次状态变化后readyState的值。通常，我们对readyState值为4的阶段感兴趣，因为这时所有数据都已就绪

		　　[注意]必须在调用open()之前指定onreadystatechange 事件处理程序才能确保跨浏览器兼容性，否则将无法接收readyState属性为0和1的情况
		 xhr.onreadystatechange = function(){
		   if(xhr.readyState === 4){
		    if(xhr.status == 200){
		      alert(xhr.responseText);
		    }
		  }
		 }



		 1